version: "3.8"
services:
  server:
      #image: 'nginx:stable-alpine'
      build:
        context: .
        dockerfile: nginx/Dockerfile
      ports:
        - '8000:80'
      #comment out volumes for deployment ready  
      volumes:
        - ./src:/var/www/html
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      depends_on:
        - php
        - mysql
#        - python
      networks:
      - webapp-network
  php:
      build: 
        context: .
        dockerfile: php/Dockerfile
      #comment out volumes for deployment ready  
      volumes:
        - ./src:/var/www/html:delegated
      networks:
      - webapp-network
      depends_on:
        - mysql
        - python
  mysql:
      image: arm64v8/mysql
      platform: linux/amd64    
      restart: always
      ports:
        - "9906:3306"
      env_file:
        - ./env/mysql.env
      #command: --init-file ./src/database/init.sql
      volumes:
        - ./src/database/sql-scripts:/docker-entrypoint-initdb.d
        - mysql-database:/var/lib/mysql
  python:
    build:
      context: .
      dockerfile: python/Dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - webapp-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
        - '8080:80'
    restart: always
    environment:
        PMA_HOST: mysql
    depends_on:
        - mysql
  composer:
    build:
      context: .
      dockerfile: composer/Dockerfile
    volumes:
      - ./src:/var/www/html/vendor
volumes: #only named volumes here
  mysql-database:
networks:
  webapp-network:
    driver: bridge